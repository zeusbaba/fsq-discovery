# This is the main configuration file for the application.
# ~~~~~
application.name=fsq-discovery

# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.
application.mode=dev
%prod.application.mode=prod

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions
# If you deploy your application to several instances be sure to use the same key !
application.secret=DryWXSZNv5TGZrk72cnNWed6VaC8XJuHEttpEhQA9stKoCQIj1Hkmh2WYzWJiKGz

# i18n
# ~~~~~
# Define locales used by your application.
# You can then place localized messages in conf/messages.{locale} files
# application.langs=fr,en,ja

# Date format
# ~~~~~
date.format=yyyy-MM-ddThh:mm:ssZ
# date.format=yyyy-MM-dd

# Log level
# ~~~~~
# Specify log level for your application.
# If you want a very customized log, create a log4j.properties file in the conf directory
# application.log=INFO
#
# More logging configuration
application.log.path=/log4j.properties
application.log.system.out=off

# Store path for Blob content
attachments.path=data/attachments

# HTTP Response headers control for static files
# ~~~~~
# Set the default max-age, telling the user's browser how long it should cache the page.
# Default is 3600 (one hour). Set it to 0 to send no-cache.
# This is only read in prod mode, in dev mode the cache is disabled.
# http.cacheControl=3600
http.cacheControl=0

# Most web servers will add a X-Forwarded-For header with the remote client IP address as first argument. If you enable the forward support in your play app configuration:
# Play will change the request.remoteAddress from the IP of the proxy with the IP of the client. You have to list the IP addresses of your proxy servers for this to work.
XForwardedSupport=127.0.0.1


# --- APP parameters ---
fsqdiscovery.api.base.url=http://localhost:9000

fsqdiscovery.token.parameter-name=token-id
fsqdiscovery.token.header-name=x-fsqdiscovery-token
fsqdiscovery.cache.name = fsqdiscovery-cache
fsqdiscovery.cache.ttl = 15mn
#fsqdiscovery.tokencache.ttl = 24h
# cookie filter
fsqdiscovery.cookiefilter.enabled=true

fsqdiscovery.cache.trending-poi.ttl = 2h
fsqdiscovery.cache.trending-poi.keyprefix = trending_poi_
fsqdiscovery.cache.nearby-poi.ttl = 30mn
fsqdiscovery.cache.nearby-poi.keyprefix = nearby_poi_

fsqdiscovery.cache.single-poi.ttl = 30mn
fsqdiscovery.cache.single-poi.keyprefix = single_poi_
fsqdiscovery.cache.herenow.ttl = 10mn
fsqdiscovery.cache.herenow.keyprefix = single_poi_herenow_

fsqdiscovery.cache.appid.ttl = 2h
fsqdiscovery.cache.appid.keyprefix = appids_

# pre-defined appids per client
fsqdiscovery.appids = ios-1332079140,default-1232479140,functests-1842679140
#fsqdiscovery.appid.ios = ios-b46e-3a82-4c78-8a7e-a6135bf56a35
#fsqdiscovery.appid.testing = default1-2e50-47c9-ba36-841226fb354b

# extra parameter names
fsqdiscovery.apiparam.appid = appid
fsqdiscovery.apiparam.limit = limit
fsqdiscovery.apiparam.radius = radius
fsqdiscovery.apiparam.herenow = herenow
fsqdiscovery.apiparam.ids = ids
fsqdiscovery.apiparam.query = query

fsqdiscovery.poitype.foursquare = sn-foursquare
fsqdiscovery.poitype.gowalla = sn-gowalla

fsqdiscovery.discovery.API_LOADITEMS_LIMIT_DEFAULT = 50
fsqdiscovery.discovery.API_LOADITEMS_LIMIT_MAX = 100
fsqdiscovery.discovery.API_LOADITEMS_RADIUS_DEFAULT = 5000
fsqdiscovery.discovery.API_LOADITEMS_RADIUS_MAX = 8000

fsqdiscovery.param.foursquare.poilist = foursquare-poi-list


# MUST-HAVE parameters for Foursquare (4sq) API communication
# You MUST create an application on Foursquare, see: https://foursquare.com/oauth/register
# then get OAuth token against your application
# how-to do this is clearly documented on Foursquare developer portal, see: https://developer.foursquare.com/index
# 4sq Client ID and Client Secret, see: http://dl.dropbox.com/u/13849473/4sq_example-consumer.png
fsqdiscovery.discovery.FSQ_APP_KEY = <4sq-app Client Id>  
fsqdiscovery.discovery.FSQ_APP_SECRET = <4sq-app Client Secret>
# foursquare token authenticated against application
fsqdiscovery.discovery.FSQ_TOKENS = <OAuth token pre-auth against 4sq-app>
# used for every 4sq api call
fsqdiscovery.discovery.FSQ_APP_VERSION = 20120321
fsqdiscovery.discovery.FSQ_APP_CALLBACK_OAUTHCALLBACK = http://WareNinja_FsqDiscovery
fsqdiscovery.discovery.FSQ_APP_REDIRECT_SIGNIN = https://m.foursquare.com/mobile/login
fsqdiscovery.discovery.FSQ_APP_OAUTH_BASEURL = https://foursquare.com
fsqdiscovery.discovery.FSQ_APP_OAUTH_URL = /oauth2/authenticate
fsqdiscovery.discovery.FSQ_APP_TOKEN_URL = /oauth2/access_token
fsqdiscovery.discovery.API_FOURSQUARE_BASE_URL = https://api.foursquare.com
# curl "https://api.foursquare.com/v2/venues/search?ll=40.7,-74&client_id=CLIENT_ID&client_secret=CLIENT_SECRET"
fsqdiscovery.discovery.API_FOURSQUARE_POI_SEARCH = /v2/venues/search
fsqdiscovery.discovery.API_FOURSQUARE_SINGLE_POI_SEARCH = /v2/venues/%s
fsqdiscovery.discovery.API_FOURSQUARE_POI_HERENOW = /v2/venues/%s/herenow
fsqdiscovery.discovery.API_FOURSQUARE_POI_TRENDING = /v2/venues/trending
fsqdiscovery.discovery.API_FOURSQUARE_POI_DETAILS = /v2/venues/%s
# value of "intent" parameter; browse or checkin
fsqdiscovery.discovery.API_FOURSQUARE_POI_SEARCH_INTENT = checkin


# --- mongoDB ---
# create a MongoDB instance using MongoLab.com
# then enter details below
## Morphia module configuration
## instance: MONGOLAB.com
morphia.db.host=<mongodb-host>
morphia.db.port=<mongodb-port> 
morphia.db.name=<mongodb-name>
morphia.db.username=<username>
morphia.db.password=<password>

# configure your ID field type
# could be either ObjectId or Long, default to ObjectId
morphia.id.type=Long
# Set default write concern, see http://api.mongodb.org/java/current/com/mongodb/class-use/WriteConcern.html
#morphia.defaultWriteConcern=safe
morphia.logger.level=INFO

